// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bugLog.Models;

namespace bugLog.Migrations
{
    [DbContext(typeof(BugDbContext))]
    [Migration("20210425035110_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("bugLog.Models.Bug", b =>
                {
                    b.Property<int>("BugId")
                        .HasColumnType("int");

                    b.Property<int>("AssignedToTeamId")
                        .HasColumnType("int");

                    b.Property<int>("BugAssignedTo")
                        .HasColumnType("int");

                    b.Property<int?>("BugClosedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("BugClosedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("BugCreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("BugCreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("BugDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BugReportedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BugResolutionSummary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BugSeverity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BugStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BugTitle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BugId");

                    b.HasIndex("BugAssignedTo");

                    b.HasIndex("BugClosedBy");

                    b.HasIndex("BugCreatedBy");

                    b.ToTable("Bugs");
                });

            modelBuilder.Entity("bugLog.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("TeamMotto")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("bugLog.Models.UserAccess", b =>
                {
                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UniqueKey")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TeamId")
                        .HasName("PK_Access");

                    b.ToTable("UserAccesses");
                });

            modelBuilder.Entity("bugLog.Models.UserProfile", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("AllowEmailNotification")
                        .HasColumnType("bit");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId")
                        .HasName("PK_UserProfile");

                    b.HasIndex("TeamId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("bugLog.Models.Bug", b =>
                {
                    b.HasOne("bugLog.Models.UserProfile", "BugAssignedToNavigation")
                        .WithMany("BugsBugAssignedToNavigation")
                        .HasForeignKey("BugAssignedTo")
                        .HasConstraintName("FK_Bugs(Assigned)_UserProfile")
                        .IsRequired();

                    b.HasOne("bugLog.Models.UserProfile", "BugClosedByNavigation")
                        .WithMany("BugsBugClosedByNavigation")
                        .HasForeignKey("BugClosedBy")
                        .HasConstraintName("FK_Bugs(Closed)_UserProfile");

                    b.HasOne("bugLog.Models.UserProfile", "BugCreatedByNavigation")
                        .WithMany("BugsBugCreatedByNavigation")
                        .HasForeignKey("BugCreatedBy")
                        .HasConstraintName("FK_Bugs(Created)_UserProfile")
                        .IsRequired();

                    b.Navigation("BugAssignedToNavigation");

                    b.Navigation("BugClosedByNavigation");

                    b.Navigation("BugCreatedByNavigation");
                });

            modelBuilder.Entity("bugLog.Models.UserProfile", b =>
                {
                    b.HasOne("bugLog.Models.Team", "Team")
                        .WithMany("UserProfiles")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_UserProfile_Teams")
                        .IsRequired();

                    b.HasOne("bugLog.Models.UserAccess", "TeamNavigation")
                        .WithMany("UserProfiles")
                        .HasForeignKey("TeamId")
                        .HasConstraintName("FK_UserProfile_Access")
                        .IsRequired();

                    b.Navigation("Team");

                    b.Navigation("TeamNavigation");
                });

            modelBuilder.Entity("bugLog.Models.Team", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("bugLog.Models.UserAccess", b =>
                {
                    b.Navigation("UserProfiles");
                });

            modelBuilder.Entity("bugLog.Models.UserProfile", b =>
                {
                    b.Navigation("BugsBugAssignedToNavigation");

                    b.Navigation("BugsBugClosedByNavigation");

                    b.Navigation("BugsBugCreatedByNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
